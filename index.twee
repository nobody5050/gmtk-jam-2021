::StoryData
{
	"ifid": "9EE4ECD3-1884-4A59-9137-148692F842EC",
    "format": "SugarCube",
    "format-version": "2.30.0",
    "start": "Start"
}

::StoryTitle
Hello, Operator

::Start
<h1>Hello Operator!</h1> 
Congratulations on your new job at PhoneCompany Inc! Your job is to tie people's phone lines together so they can make phone calls. Also, we've had an uptick in crime lately, so if you hear anything suspicious dont forget to report it to the police!

Know how to run a switchboard?
[["Nope, sorry"|Tutorial-1]]
[["Absolutely!"|PreGame]]

:: Credits
Nobody5050 - Main Dev

Smol Helpers
<small>StealthHydra179</small>
<small>Alvarito050506</small>

:: PreGame
You'll have 1 minute to correctly place as many calls as you can, while reporting all suspicious activity to the police. The longer you take to place a call, the less points you'll earn, and if you report a good call to the police you'll loose points.
Good luck!

[[Click here to play|Game]]
[[See the tutorial|Tutorial-1]]

:: Tutorial-1
<center>
Operating a switchboard is easy!

First, look at the call monitor. The call monitor lists all incoming calls, the phone number being called from, and the destination.

here's an example call monitor:

<h2>Call Monitor</h2>
<table style="width:100%" id="call-monitor">
  <tr>
    <th>Firstname</th>
    <th>Origin</th> 
    <th>Destination</th>
  </tr>
  <tr>
    <td>Jill</td>
    <td>20</td> 
    <td>50</td>
  </tr>
  <tr>
    <td>Eve</td>
    <td>19</td> 
    <td>94</td>
  </tr>
</table>

[[Got it.|Tutorial-2]]
</center>

::  Tutorial-2
<center>
To respond to a call, look at the phone directory. The phone directory lists all of the people at your station, along with their phone number. Just look for the destination number in the list, and hit the green <button class="connect">Connect</button> button.

here's an example phone directory:
<h2>Switchboard</h2>
<table style="width:100%">
  <tr>
    <th>Firstname</th>
    <th>Lastname</th> 
    <th>Phone Number</th>
    <th>Status</th>
  </tr>
  <tr>
    <td>Jill</td>
    <td>Smith</td> 
    <td>50</td>
    <td><button class="disconnected" onclick="alert('you clicked the box!')">Not Connected</button></td>
  </tr>
  <tr>
    <td>Eve</td>
    <td>Jackson</td> 
    <td>94</td>
    <td><button class="connected" onclick="alert('you clicked the box!')">Connected</button></td>
  </tr>
</table>

Once you connect to a call you'll breifly be able to listen to what the users are saying. Report any suspicious behavor to the police!

[[Understood.|Tutorial-3]]
</center>

:: Tutorial-3
<center>
Reporting suspicious behavior is easy!

If a person says something that should be reported to the police, just find it in the call monitor and click the blue report button

Well, thats it kid! You now know just as much about me at switchboard operating. [[Get out there and connect some calls!|Game]]
</center>

:: Game
<!-- Everything below is testing for the game -->
<center>
<p>Complete as many calls as you can in a minute! Time remaining: <span id="time"></span></p>

<h2>Call Monitor</h2>
<table style="width:100%" id="call-monitor">
  <tr>
    <th>Firstname</th>
    <th>Origin</th> 
    <th>Destination</th>
  </tr>
</table>

<h2>Phone Directory</h2>
<table style="width:100%" id="directory">
  <tr>
    <th>Firstname</th>
    <th>Lastname</th> 
    <th>Phone Number</th>
    <th>Status</th>
  </tr>
  <tr>
    <td>Jill</td>
    <td>Smith</td> 
    <td>50</td>
    <td><button class="disconnected" id="50" onclick="connect(50)">Not Connected</button></td>
  </tr>
  <tr>
    <td>Eve</td>
    <td>Jackson</td> 
    <td>94</td>
    <td><button class="disconnected" id="94" onclick="connect(94)">Not Connected</button></td>
  </tr>
  <tr>
    <td>John</td>
    <td>Doe</td> 
    <td>85</td>
    <td><button class="disconnected" id="85" onclick="connect(85)">Not Connected</button></td>
  </tr>
  <tr>
    <td>Jakob</td>
    <td>Tron</td> 
    <td>15</td>
    <td><button class="disconnected" id="15" onclick="connect(15)">Not Connected</button></td>
  </tr>
  <tr>
    <td>Ryan</td>
    <td>Wang</td> 
    <td>25</td>
    <td><button class="disconnected" id="25" onclick="connect(25)">Not Connected</button></td>
  </tr>
  <tr>
    <td>Oscar</td>
    <td>Zhang</td> 
    <td>35</td>
    <td><button class="disconnected" id="35" onclick="connect(35)">Not Connected</button></td>
  </tr>
  <tr>
    <td>Tiffany</td>
    <td>Lee</td> 
    <td>16</td>
    <td><button class="disconnected" id="16" onclick="connect(16)">Not Connected</button></td>
  </tr>
  <tr>
    <td>Katia</td>
    <td>Tavorak</td> 
    <td>19</td>
    <td><button class="disconnected" id="19" onclick="connect(19)">Not Connected</button></td>
  </tr>
</table>
<div class="connected" style="position: absolute;left: -9999px;">Not Connected</div>

<h2>Call Log</h2>
<table id="call-content">
  <tr>
    <td>Message</td>
    <td>status</td>
  <tr>
</table>
</center>
<div class="connected" style="position: absolute;left: -9999px;">Not Connected</div>
<!-- For some reason closing the table and center renders. unsure why, just not gonna close em -->
<script>

var currentConnected = 0;
var crimeitems = ["Remember, The Job Goes Down in 5 days.", "hello", "sup"];
var items = ["hi", "hello", "sup"];
var paragraph = document.getElementById("call-content");
var remainingTime = 60;
var timer = setInterval(countdown, 1000); //set the countdown to every second
var elem = document.querySelector('#time');

function appendRandom() {
  int = Math.floor(Math.random() * items.length)
  var item = items[int];
  items.splice(int,1)
  paragraph.innerHTML += `<tr><td>${item}</td><button class="disconnected" onclick="filterCall('${item}, ${document.getElementById("call-content").rows.length}')">Report</button></tr>`;
}

function connect(number) {
  let currentConnected = [number];
  document.getElementsByClassName("connected")[0].innerHTML = "Not Connected";
  document.getElementsByClassName("connected")[0].className = "disconnected";
  document.getElementById(currentConnected).className = "connected";
  document.getElementById(currentConnected).innerHTML = "Connected";
  x = (Math.floor(Math.random() * 2) == 0);
    if(x){
        appendRandom();
    }else{
        appendCrime();
    }
    deleterow("call-monitor")
}

function appendCrime() {
  int = Math.floor(Math.random() * crimeitems.length)
  var item = crimeitems[int];
  crimeitems.splice(int,1)
  paragraph.innerHTML += `<tr><td>${item}</td><button class="disconnected" onclick="filterCall('${item}, ${document.getElementById("call-content").rows.length}')">Report</button></tr>`;
}

function generateCall() {
  x = (Math.floor(Math.random() * 2) == 0);
    if(x){
        var names = ["hi", "hello", "sup"];
	int = Math.floor(Math.random() * names.length)
	var item = items[int];
	var destination = Math.floor(Math.random() * 99) + 1;
	var callmonitor = document.getElementById("call-monitor");
	const origin = Math.floor(Math.random() * 99) + 1
	callmonitor.innerHTML += "<tr><td>" + item + "</td>" + "<td>" + origin + "</td>" + "<td>" + destination + "</td></tr>"
	try {
	  let tables = document.getElementById("directory").children;
	  let RandomTable = tables[Math.floor(Math.random() * tables.length - 1)];
	  let button = RandomTable.getElementsByTagName("button")[0];
	  
	  button.className = "connect"
	  button.innerText = "Connect"
	}
        catch(err) {
	  console.log(err)
	}
    }else{
        console.log("hi")
    }
}

function CountDownTimer(duration, granularity) {
  this.duration = duration;
  this.granularity = granularity || 1000;
  this.tickFtns = [];
  this.running = false;
}

function countdown() {
      if (remainingTime == -1) {
        clearTimeout(timer);
        alert("GAME OVER")
      } else {
        elem.innerHTML = remainingTime + ' seconds';
        remainingTime--; //we subtract the second each iteration
	generateCall();
      }
    }
    
function deleterow(tableID) {
    var table = document.getElementById(tableID);
    var rowCount = table.rows.length;

    table.deleteRow(rowCount -1);
}

function filterCall(text, id) {
  console.log(text)
}
</script>

